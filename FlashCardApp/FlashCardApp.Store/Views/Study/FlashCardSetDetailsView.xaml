<views:MvxWindowsPage
    x:Name="pageRoot"
    x:Class="FlashCardApp.Store.Views.FlashCardSetDetailsView"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:FlashCardApp.Store.Views"
    xmlns:common="using:FlashCardApp.Store.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="using:Cirrious.MvvmCross.WindowsCommon.Views"
    mc:Ignorable="d">

    <Page.Resources>

        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}" Background="{StaticResource FlashCardPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Command="{Binding GoBack}" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{Binding Set.SetName}" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>

        <Grid Grid.Row="1" Margin="46,0,0,0" >
            <Grid.RowDefinitions>
                <RowDefinition Height="480"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <ListBox Background="{StaticResource FlashCardPrimaryThemeBrush}"
                Grid.Column="0"
                ItemsSource="{Binding SetCards}"
                SelectionMode="Single"
                SelectedItem="{Binding SelectedCard, Mode=TwoWay}"
                >
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <StackPanel>
                                <TextBlock FontSize="36" Foreground="{StaticResource FlashCardPageBackgroundThemeBrush}" Text="{Binding Simplified}" TextWrapping="Wrap"></TextBlock>
                                <TextBlock FontSize="36" Foreground="{StaticResource FlashCardPageBackgroundThemeBrush}" Text="{Binding Traditional}" TextWrapping="Wrap"></TextBlock>
                                <TextBlock FontSize="36" Foreground="{StaticResource FlashCardPageBackgroundThemeBrush}" Text="{Binding AccentedPinyin}" TextWrapping="Wrap"></TextBlock>
                                <TextBlock FontSize="36" Foreground="{StaticResource FlashCardPageBackgroundThemeBrush}" Text="{Binding Definition}" TextWrapping="Wrap"></TextBlock>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <Button Command="{Binding DeleteCardCommand}" IsEnabled="{Binding CardSelected}" Style="{StaticResource FlashCardButton}">
                    <TextBlock Text="Delete Card" TextWrapping="WrapWholeWords"></TextBlock>
                </Button>
                <Button Command="{Binding ShowCardDetailCommand}" IsEnabled="{Binding CardSelected}" Style="{StaticResource FlashCardButton}" >
                    <TextBlock Text="Edit Card" TextWrapping="WrapWholeWords"></TextBlock>
                </Button>
                <Button Command="{Binding DeleteSetCommand}" Style="{StaticResource FlashCardButton}">
                    <TextBlock Text="Delete Set" TextWrapping="WrapWholeWords"></TextBlock>
                </Button>
             
            </StackPanel>
        </Grid>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</views:MvxWindowsPage>
